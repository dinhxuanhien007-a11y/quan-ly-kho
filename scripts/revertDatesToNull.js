// D:\quan-ly-kho\scripts\revertDatesToNull.js

import admin from 'firebase-admin';
import { getFirestore } from 'firebase-admin/firestore';
import { createRequire } from 'module';

// T·∫£i file service account key
const require = createRequire(import.meta.url);
const serviceAccount = require('./serviceAccountKey.json');

// Kh·ªüi t·∫°o Firebase Admin
admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = getFirestore();
// ƒê√¢y l√† ng√†y th√°ng ch√≠nh x√°c m√† script tr∆∞·ªõc ƒë√£ s·ª≠ d·ª•ng ƒë·ªÉ c·∫≠p nh·∫≠t
const SENTINEL_DATE = new Date('9999-12-31T00:00:00.000Z');

async function revertSentinelDatesToNull() {
    console.log("üöÄ B·∫Øt ƒë·∫ßu qu√° tr√¨nh ho√†n t√°c HSD (ƒë·ªïi 31/12/9999 v·ªÅ l·∫°i null)...");
    
    try {
        const batch = db.batch();
        const lotsRef = db.collection('inventory_lots');
        
        // Truy v·∫•n t·∫•t c·∫£ c√°c document c√≥ expiryDate l√† ng√†y sentinel
        const snapshot = await lotsRef.where('expiryDate', '==', SENTINEL_DATE).get();

        if (snapshot.empty) {
            console.log("‚úÖ Kh√¥ng t√¨m th·∫•y l√¥ h√†ng n√†o c√≥ HSD l√† 31/12/9999. Kh√¥ng c·∫ßn ho√†n t√°c.");
            return;
        }

        console.log(`- T√¨m th·∫•y ${snapshot.size} l√¥ h√†ng c·∫ßn ho√†n t√°c.`);

        snapshot.forEach(doc => {
            console.log(`  - Chu·∫©n b·ªã ho√†n t√°c cho l√¥ ID: ${doc.id}`);
            // C·∫≠p nh·∫≠t tr∆∞·ªùng expiryDate v·ªÅ l·∫°i gi√° tr·ªã null
            batch.update(doc.ref, { expiryDate: null });
        });

        await batch.commit();

        console.log(`\nüéâ HO√ÄN T·∫§T! ƒê√£ ho√†n t√°c th√†nh c√¥ng ${snapshot.size} l√¥ h√†ng v·ªÅ HSD null.`);

    } catch (error) {
        console.error("\n‚ùå ƒê√£ x·∫£y ra l·ªói nghi√™m tr·ªçng trong qu√° tr√¨nh ho√†n t√°c:", error);
    }
}

// Ch·∫°y h√†m ch√≠nh
revertSentinelDatesToNull();